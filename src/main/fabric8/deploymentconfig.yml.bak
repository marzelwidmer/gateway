---
kind: DeploymentConfig
metadata:
  labels:
    app:  ${project.artifactId}
    version:  ${project.version}
    group:  ${project.groupId}
  name:  ${project.artifactId}

spec:
  replicas: 1
  revisionHistoryLimit: 2

  selector:
    app:  ${project.artifactId}
    group: ${project.groupId}

  strategy:
    rollingParams:
      timeoutSeconds: 3600
    type: Rolling

  template:
    metadata:
      labels:
        app: ${project.artifactId}
        version: ${project.version}
        group: ${project.groupId}

    spec:
      containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: ${project.artifactId}:latest
          imagePullPolicy: Always
          name: ${project.artifactId}
          resources:
            requests:
              memory: ${requests_memory}
              cpu: ${requests_cpu}
            limits:
              memory: ${limits_memory}
              cpu: ${limits_cpu}
          livenessProbe:
            httpGet:
              path: /alive
              port: 8080
          readinessProbe:
            periodSeconds: 5
            failureThreshold: 1
            httpGet:
              path: /actuator/health
              port: 8080
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - ${project.artifactId}
        from:
          kind: ImageStreamTag
          name: ${project.artifactId}:latest
      type: ImageChange







---
#metadata:
#  labels:
#    project: ${project.artifactId}
#    hystrix.enabled: true
#    hystrix.cluster: default
#    version: ${project.version}
#spec:
#  replicas: 1
#  template:
#    metadata:
#      labels:
#        project: ${project.artifactId}
#        hystrix.enabled: true
#        hystrix.cluster: default
#        version: ${project.version}
#    spec:
#      containers:
#        - resources:
#            limits:
#              memory: ${limits_memory}
#            requests:
#              memory: ${requests_memory}

#
#spec:
#  replicas: 1
#  template:
#    spec:
#      containers:
#        - resources:
#            limits:
#              memory: ${container.memory.limit}
#        - env:
#            - name: "GC_MAX_METASPACE_SIZE"
#              value: ${container.gc_max_metaspace_size}




#spec:
#  template:
#    spec:
#      containers:
#        - env:
#            - name: SPRING_PROFILES_ACTIVE
#              value: mysql
#            - name: SPRING_DATASOURCE_USER
#              valueFrom:
#                secretKeyRef:
#                  name: baeldung-db
#                  key: database-user
#            - name: SPRING_DATASOURCE_PASSWORD
#              valueFrom:
#                secretKeyRef:
#                  name: baeldung-db
#                  key: database-password
#          livenessProbe:
#            httpGet:
#              path: /actuator/health
#              port: 8080
#              scheme: HTTP
#            initialDelaySeconds: 180
#          readinessProbe:
#            httpGet:
#              path: /actuator/health
#              port: 8080
#              scheme: HTTP
#            initialDelaySeconds: 30
